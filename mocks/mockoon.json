{
  "uuid": "ba364acb-8922-4360-a9d3-ceab6a9dc755",
  "lastMigration": 32,
  "name": "Mockoon",
  "endpointPrefix": "",
  "latency": 0,
  "port": 8001,
  "hostname": "",
  "folders": [],
  "routes": [
    {
      "uuid": "3880149a-91f7-4c7a-8b1b-b6a620b6c20f",
      "type": "http",
      "documentation": "Modelled after the R API versions endpoint, which is currently situated at '/'.",
      "method": "get",
      "endpoint": "",
      "responses": [
        {
          "uuid": "eb55d0af-aa59-4d0f-8cea-58ba9c68fa55",
          "body": "{\n  \"status\": \"success\",\n  \"errors\": null,\n  \"data\": {\n    \"daedalus\": \"1.2.3.4.5.6.7.8\",\n    \"daedalus.api\": \"8.7.6.5.4.3.2.1\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "128811da-2c89-4b2c-bd7a-fd9a18811f9d",
          "body": "{\n  \"status\": \"failure\",\n  \"errors\": [\n    {\n      \"error\": \"NOT_FOUND\",\n      \"detail\": \"Resource not found\"\n    }\n  ],\n  \"data\": null\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "2c4e88c2-0025-45ee-b298-9ed1fcd24f33",
          "body": "{\n  \"thisResponse\": \"shouldNeverBeReceivedSinceIConfiguredTheDelayToBeGreaterThanTheTimeoutWeWaitForTheResponseFor\"\n}",
          "latency": 99999999,
          "statusCode": 200,
          "label": "",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": "SEQUENTIAL"
    },
    {
      "uuid": "a62b8d87-1092-43cb-a728-b913728fbd20",
      "type": "http",
      "documentation": "An endpoint to check whether the server is the real R API server or the mock server.",
      "method": "get",
      "endpoint": "mock-smoke",
      "responses": [
        {
          "uuid": "8e504c9c-2c6a-4bdb-989a-428fb3b978d8",
          "body": "{\n  \"serverUp\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "367cdafb-4f59-402d-9643-d03ab0a3043d",
      "type": "http",
      "documentation": "",
      "method": "get",
      "endpoint": "metadata",
      "responses": [
        {
          "uuid": "13f980ac-f1f6-4f18-ba00-2ccf628062a2",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [],
          "bodyType": "FILE",
          "filePath": "responses/metadata.json",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "c9d2d8a5-6b48-4131-aa3d-1585260f06b7",
          "body": "{\n  \"status\": \"failure\",\n  \"errors\": [\n    {\n      \"error\": \"NOT_FOUND\",\n      \"detail\": \"Resource not found\"\n    }\n  ],\n  \"data\": null\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "05728268-63d9-42d9-bba1-c1fc244bdbef",
          "body": "{\n  \"thisResponse\": \"shouldNeverBeReceivedSinceIConfiguredTheDelayToBeGreaterThanTheTimeoutWeWaitForTheResponseFor\"\n}",
          "latency": 99999999,
          "statusCode": 200,
          "label": "",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": "SEQUENTIAL"
    },
    {
      "uuid": "873f4dae-407e-4a88-b777-0888ff8b471a",
      "type": "http",
      "documentation": "",
      "method": "post",
      "endpoint": "scenario/run",
      "responses": [
        {
          "uuid": "d2ac5ea7-a405-494b-9dac-363a1315dd85",
          "body": "{\n  \"status\": \"success\",\n  \"errors\": null,\n  \"data\": {\n    \"runId\": \"successfulResponseRunId\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "$.parameters.mockoonResponse",
              "value": "successful",
              "invert": false,
              "operator": "equals"
            },
            {
              "target": "body",
              "modifier": "$.modelVersion",
              "value": "1.2.3.4.5.6.7.8",
              "invert": false,
              "operator": "equals"
            },
            {
              "target": "body",
              "modifier": "$.parameters.country",
              "value": "Thailand",
              "invert": false,
              "operator": "equals"
            },
            {
              "target": "body",
              "modifier": "$.parameters.pathogen",
              "value": "sars-cov-1",
              "invert": false,
              "operator": "equals"
            },
            {
              "target": "body",
              "modifier": "$.parameters.response",
              "value": "no_closure",
              "invert": false,
              "operator": "equals"
            },
            {
              "target": "body",
              "modifier": "$.parameters.vaccine",
              "value": "none",
              "invert": false,
              "operator": "equals"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "c8a3fc89-f2d5-4451-873d-734fdc5c35ac",
          "body": "{\n  \"status\": \"failure\",\n  \"errors\": [\n    {\n      \"error\": \"NOT_FOUND\",\n      \"detail\": \"Resource not found\"\n    }\n  ],\n  \"data\": null\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "$.parameters.mockoonResponse",
              "value": "notFound",
              "invert": false,
              "operator": "equals"
            },
            {
              "target": "body",
              "modifier": "$.modelVersion",
              "value": "1.2.3.4.5.6.7.8",
              "invert": false,
              "operator": "equals"
            },
            {
              "target": "body",
              "modifier": "$.parameters.country",
              "value": "Thailand",
              "invert": false,
              "operator": "equals"
            },
            {
              "target": "body",
              "modifier": "$.parameters.pathogen",
              "value": "sars-cov-1",
              "invert": false,
              "operator": "equals"
            },
            {
              "target": "body",
              "modifier": "$.parameters.response",
              "value": "no_closure",
              "invert": false,
              "operator": "equals"
            },
            {
              "target": "body",
              "modifier": "$.parameters.vaccine",
              "value": "none",
              "invert": false,
              "operator": "equals"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "2d2bfb3d-c3c4-4ef2-9f57-a912e9806a47",
          "body": "{\n  \"thisResponse\": \"shouldNeverBeReceivedSinceIConfiguredTheDelayToBeGreaterThanTheTimeoutWeWaitForTheResponseFor\"\n}",
          "latency": 99999999,
          "statusCode": 200,
          "label": "",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "$.parameters.mockoonResponse",
              "value": "delayed",
              "invert": false,
              "operator": "equals"
            },
            {
              "target": "body",
              "modifier": "$.modelVersion",
              "value": "1.2.3.4.5.6.7.8",
              "invert": false,
              "operator": "equals"
            },
            {
              "target": "body",
              "modifier": "$.parameters.country",
              "value": "Thailand",
              "invert": false,
              "operator": "equals"
            },
            {
              "target": "body",
              "modifier": "$.parameters.pathogen",
              "value": "sars-cov-1",
              "invert": false,
              "operator": "equals"
            },
            {
              "target": "body",
              "modifier": "$.parameters.response",
              "value": "no_closure",
              "invert": false,
              "operator": "equals"
            },
            {
              "target": "body",
              "modifier": "$.parameters.vaccine",
              "value": "none",
              "invert": false,
              "operator": "equals"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "1786b700-fea4-429d-8b2e-a812ff1e67df",
      "type": "http",
      "documentation": "",
      "method": "get",
      "endpoint": "scenario/status/notFoundRunId",
      "responses": [
        {
          "uuid": "8c9ffc66-e162-4c74-80a8-f361360b78b9",
          "body": "{\n  \"status\": \"failure\",\n  \"errors\": [\n    {\n      \"error\": \"SERVER_ERROR\",\n      \"detail\": \"Missing result for task: 'notFoundRunId'\"\n    }\n  ],\n  \"data\": null\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "e89b5669-2cba-4237-b266-4bf6eb9435e3",
      "type": "http",
      "documentation": "",
      "method": "get",
      "endpoint": "scenario/status/successfulResponseRunId",
      "responses": [
        {
          "uuid": "58b3039a-1420-4590-8216-c2dd137528cd",
          "body": "{\n  \"status\": \"success\",\n  \"errors\": null,\n  \"data\": {\n    \"runStatus\": \"complete\",\n    \"runSuccess\": true,\n    \"done\": true,\n    \"runErrors\": null,\n    \"runId\": \"successfulResponseRunId\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "access-control-allow-headers",
              "value": "Content-Type, Origin, Accept, Authorization, Content-Length, X-Requested-With"
            },
            {
              "key": "access-control-allow-methods",
              "value": "GET,POST,PUT,PATCH,DELETE,HEAD,OPTIONS"
            },
            {
              "key": "access-control-allow-origin",
              "value": "*"
            },
            {
              "key": "content-type",
              "value": "application/json; charset=utf-8"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "2e085e4c-0c5c-46e8-a728-298c7a79baa7",
      "type": "http",
      "documentation": "",
      "method": "get",
      "endpoint": "scenario/status/runIdOfPreExistingScenario",
      "responses": [
        {
          "uuid": "768e6899-d4c7-48fd-9952-5cbd83c32146",
          "body": "{\n  \"status\": \"success\",\n  \"errors\": null,\n  \"data\": {\n    \"runStatus\": \"complete\",\n    \"runSuccess\": true,\n    \"done\": true,\n    \"runErrors\": null,\n    \"runId\": \"runIdOfPreExistingScenario\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "access-control-allow-headers",
              "value": "Content-Type, Origin, Accept, Authorization, Content-Length, X-Requested-With"
            },
            {
              "key": "access-control-allow-methods",
              "value": "GET,POST,PUT,PATCH,DELETE,HEAD,OPTIONS"
            },
            {
              "key": "access-control-allow-origin",
              "value": "*"
            },
            {
              "key": "content-type",
              "value": "application/json; charset=utf-8"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "fdfcdd62-99e4-41c4-b52f-fbcffdf27926",
      "type": "http",
      "documentation": "",
      "method": "get",
      "endpoint": "scenario/status/slowResponseRunId",
      "responses": [
        {
          "uuid": "97942d15-db5f-49bb-8adf-613699623b46",
          "body": "{\n  \"thisResponse\": \"shouldNeverBeReceivedSinceIConfiguredTheDelayToBeGreaterThanTheTimeoutWeWaitForTheResponseFor\"\n}",
          "latency": 99999999,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "access-control-allow-headers",
              "value": "Content-Type, Origin, Accept, Authorization, Content-Length, X-Requested-With"
            },
            {
              "key": "access-control-allow-methods",
              "value": "GET,POST,PUT,PATCH,DELETE,HEAD,OPTIONS"
            },
            {
              "key": "access-control-allow-origin",
              "value": "*"
            },
            {
              "key": "content-type",
              "value": "application/json; charset=utf-8"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "63029dfc-a4ce-4304-9d61-6ca75c376e7d",
      "type": "http",
      "documentation": "",
      "method": "get",
      "endpoint": "scenario/results/notFoundRunId",
      "responses": [
        {
          "uuid": "8524ab95-fd74-4ed8-9888-4ac36b6ccb89",
          "body": "{\n  \"status\": \"failure\",\n  \"errors\": [\n    {\n      \"error\": \"SERVER_ERROR\",\n      \"detail\": \"Missing result for task: 'notFoundRunId'\"\n    }\n  ],\n  \"data\": null\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "eb485c3a-ae4e-4cf7-a0e6-6963889dd262",
      "type": "http",
      "documentation": "",
      "method": "get",
      "endpoint": "scenario/results/slowResponseRunId",
      "responses": [
        {
          "uuid": "e2efe74f-763e-4562-8f23-45056eca808c",
          "body": "{\n  \"thisResponse\": \"shouldNeverBeReceivedSinceIConfiguredTheDelayToBeGreaterThanTheTimeoutWeWaitForTheResponseFor\"\n}",
          "latency": 99999999,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "access-control-allow-headers",
              "value": "Content-Type, Origin, Accept, Authorization, Content-Length, X-Requested-With"
            },
            {
              "key": "access-control-allow-methods",
              "value": "GET,POST,PUT,PATCH,DELETE,HEAD,OPTIONS"
            },
            {
              "key": "access-control-allow-origin",
              "value": "*"
            },
            {
              "key": "content-type",
              "value": "application/json; charset=utf-8"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "e6cef693-0414-45a3-9551-3108bf15b5c1",
      "type": "http",
      "documentation": "",
      "method": "get",
      "endpoint": "scenario/results/successfulResponseRunId",
      "responses": [
        {
          "uuid": "ed07a0b1-d343-4c98-8ddc-3b3fe40b1bea",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [
            {
              "key": "access-control-allow-headers",
              "value": "Content-Type, Origin, Accept, Authorization, Content-Length, X-Requested-With"
            },
            {
              "key": "access-control-allow-methods",
              "value": "GET,POST,PUT,PATCH,DELETE,HEAD,OPTIONS"
            },
            {
              "key": "access-control-allow-origin",
              "value": "*"
            },
            {
              "key": "content-type",
              "value": "application/json; charset=utf-8"
            }
          ],
          "bodyType": "FILE",
          "filePath": "responses/results.json",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    }
  ],
  "rootChildren": [
    {
      "type": "route",
      "uuid": "3880149a-91f7-4c7a-8b1b-b6a620b6c20f"
    },
    {
      "type": "route",
      "uuid": "a62b8d87-1092-43cb-a728-b913728fbd20"
    },
    {
      "type": "route",
      "uuid": "367cdafb-4f59-402d-9643-d03ab0a3043d"
    },
    {
      "type": "route",
      "uuid": "873f4dae-407e-4a88-b777-0888ff8b471a"
    },
    {
      "type": "route",
      "uuid": "1786b700-fea4-429d-8b2e-a812ff1e67df"
    },
    {
      "type": "route",
      "uuid": "e89b5669-2cba-4237-b266-4bf6eb9435e3"
    },
    {
      "type": "route",
      "uuid": "fdfcdd62-99e4-41c4-b52f-fbcffdf27926"
    },
    {
      "type": "route",
      "uuid": "63029dfc-a4ce-4304-9d61-6ca75c376e7d"
    },
    {
      "type": "route",
      "uuid": "eb485c3a-ae4e-4cf7-a0e6-6963889dd262"
    },
    {
      "type": "route",
      "uuid": "e6cef693-0414-45a3-9551-3108bf15b5c1"
    }
  ],
  "proxyMode": false,
  "proxyHost": "localhost:8001",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [
    {
      "key": "Content-Type",
      "value": "application/json"
    },
    {
      "key": "Access-Control-Allow-Origin",
      "value": "*"
    },
    {
      "key": "Access-Control-Allow-Methods",
      "value": "GET,POST,PUT,PATCH,DELETE,HEAD,OPTIONS"
    },
    {
      "key": "Access-Control-Allow-Headers",
      "value": "Content-Type, Origin, Accept, Authorization, Content-Length, X-Requested-With"
    }
  ],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": [],
  "callbacks": []
}
