// Custom styles for this theme

body {
    background-color: var(--cui-tertiary-bg);
  }
  
  .wrapper {
    width: 100%;
    @include ltr-rtl("padding-left", var(--cui-sidebar-occupy-start, 0));
    @include ltr-rtl("padding-right", var(--cui-sidebar-occupy-end, 0));
    will-change: auto;
    @include transition(padding .15s);
  }
  
  .header > .container-fluid,
  .sidebar-header {
    min-height: calc(4rem + 1px); // stylelint-disable-line function-disallowed-list
  }
  
  .sidebar-brand-full {
    margin-left: 3px;
  }
  
  .sidebar-header {
    .nav-underline-border {
      --cui-nav-underline-border-link-padding-x: 1rem;
      --cui-nav-underline-border-gap: 0;
    }
  
    .nav-link {
      display: flex;
      align-items: center;
      min-height: calc(4rem + 1px); // stylelint-disable-line function-disallowed-list
    }
  }
  
  .sidebar-toggler {
    @include ltr-rtl("margin-left", auto);
  }
  
  .sidebar-narrow,
  .sidebar-narrow-unfoldable:not(:hover) {
    .sidebar-toggler {
      @include ltr-rtl("margin-right", auto);
    }
  }
  
  .header > .container-fluid + .container-fluid {
    min-height: 3rem;
  }
  
  .footer {
    min-height: calc(3rem + 1px); // stylelint-disable-line function-disallowed-list
  }
  
  @if $enable-dark-mode {
    @include color-mode(dark) {
      body {
        background-color: var(--cui-dark-bg-subtle);
      }
  
      .footer {
        --cui-footer-bg: var(--cui-body-bg);
      }
    }
  }
  
.form-label {
  color: rgba(37, 43, 54, 0.65);
}

.row > span.form-icon, .row > .form-label {
  width: auto; // Avoids width: 100% being applied when inside a .row
  padding: 0;
}

// Overriding '0' to add the !important flag
.btn-group > .btn:not(:last-child):not(.dropdown-toggle) {
  border-top-right-radius: 0 !important;
  border-bottom-right-radius: 0 !important;
}

.btn-group > label.btn {
  border-radius: 0.75rem;
}

.btn-check:checked + .btn, :not(.btn-check) + .btn:active, .btn:first-child:active, .btn.active, .btn.show {
  background-color: var(--cui-btn-color);
}

.btn-group-lg > label.btn {
  border-radius: 1rem;
}

.form-select, .btn {
  border-radius: 0.75rem;

  &.form-select-lg, &.btn-lg {
    border-radius: 1rem;
  }
}

// Undoes styling for '.btn-check + .btn:hover' to (nearly) match that of '.btn:hover'
.btn-group {
  .btn-check + .btn:hover {
    color: var(--cui-btn-hover-color);
    background-color: var(--cui-btn-hover-bg);
    border-color: var(--cui-btn-hover-border-color);
  }

  .btn-check:not(:checked) + .btn:hover {
    background-color: var(--cui-btn-hover-bg);
  }
}

.button-group-container .btn-outline-primary {
  background-color: var(--cui-tertiary-bg);
}

.btn:disabled, .btn.disabled, fieldset:disabled .btn {
  opacity: 0.5;
}

.tooltip {
  max-width: $tooltip-max-width;
}

// Override modal default max-width when screen would have been narrower than modal.
// Media queries can't use dynamic variables, but the calculation to get 532px is: calc(var(--cui-modal-width) + 2 * var(--cui-modal-padding));
@media (max-width: 532px) {
  .modal-dialog {
    max-width: calc(100dvw - (2 * var(--cui-modal-margin)));
  }
}

// Prevent body width changing when modal-open is applied to the body. https://github.com/jschr/bootstrap-modal/issues/64#issuecomment-55794181
.modal-open {
  overflow-y: auto !important;
}
