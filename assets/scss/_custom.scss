// Here you can add other styles
.sidebar-brand {
  img {
    width: 80%;
  }
}

.btn-scenario-header {
  height: 2.6rem;
  border-radius: 0.375rem; // copying from card

  svg, img {
    margin-top: 0.2rem;
  }

  &.btn-light {
    background: $light-background;
    border: 1px solid rgba(8, 10, 12, 0.17); // copying from card
  }
}

.fi {
  width: 1rem;
}

// Global customization 'Vue 3 Select Component', overriding styles applied to :root pseudoclass.
:root body {
  --vs-font-size: 1.25rem;
  --vs-input-outline: transparent;
  --vs-border-radius: 0.25rem;
  --vs-line-height: 0.9;
  --vs-menu-height: 400px;
  --vs-padding: 0;
  --vs-option-font-size: var(--vs-font-size);
  --vs-option-text-color: var(--vs-text-color);
  --vs-option-hover-color: var(--cui-tertiary-bg);
  --vs-option-focused-color: var(--vs-option-hover-color);
  --vs-option-selected-color: var(--cui-primary-bg-subtle);
  --vs-option-padding: 0.5rem 0.4rem;

  --vs-multi-value-bg: var(--cui-primary-bg-subtle);
  --vs-multi-value-text-color: var(--cui-primary);
  --vs-multi-value-font-size: 1rem;
  --vs-multi-value-padding: 0.4rem 0.5rem 0.2rem 0.5rem;
  --vs-indicators-gap: 0.375rem;

  .multi-value {
    border-radius: var(--vs-border-radius);
  }

  .vue-select  {
    border-radius: 1rem;

    .control {
      border-style: none;
    }

    .fi {
      width: 1rem;
      height: 0.75rem;

      &.border {
        width: calc(1rem + 2*var(--cui-border-width));
        height: calc(0.75rem + 2*var(--cui-border-width));
      }
    }

    .menu {
      border-radius: 0.5rem;

      .parameter-option .fi {
        position: relative;
        margin-right: 0.6rem;
        margin-left: 0.25rem;
        top: 0.175rem;

        &.border {
          margin-right: calc(0.6rem - var(--cui-border-width));
          margin-left: calc(0.25rem - var(--cui-border-width));
          top: calc(0.175rem - var(--cui-border-width));
        }
      }
    }

    .value-container {
      &.multi {
        // Set min-height to ensure it doesn't change depending on whether there are currently any values selected.
        min-height: 2.25rem;

        .search-input {
          position: relative;
          left: 6px; // Emulate the margin between multi-value tags, without triggering flex wrapping.
        }
      }

      // This prevents default styling where search text appears after width of current value (in single-value selects).
      &:not(.multi) .search-input {
        position: absolute;
        left: 0;
        width: 100%;
      }

      .multi-value svg {
        margin-left: 0.2rem;
        margin-right: -0.25rem;
      }
    }

    &.open {
      // This fixes an issue where the open select contracted in width because .single-value items had absolute position
      .single-value {
        position: relative !important;
      }

      // Ensure that the input for typing your search query is at least a minimum width, so that,
      // if the available space for it is very little (namely when there are many options selected in the multi-select),
      // it both wraps onto the next line and also allows enough width for you to actually be able to read what you have typed.
      &.typing .value-container.multi .search-input {
        min-width: 5rem;
      }
    }
  }
}

.card {
  background: $light-background;
}

.boldish {
  font-weight: 600 !important;
}

.text-xs {
  font-size: $font-size-xs;
}
